#!/usr/bin/env ruby

#
# summarize -- generate performance one-liners from Rails log input (:info or :debug)
#
#

# urls keep proto://host bit?
FULL_URL = false

puts %W( ip time render_time render_perc db_time db_perc final_time reqs_per_sec http_status url controller action ).join(',')
STDIN.read.split(/^\s*$/).each do |s|
  next if s !~ /^Processing.+Completed/m

  ip, time = s.match(/\(for (.+?) at (.+?)\)/)[1..-1]

  #puts s

  final_time, reqs_per_sec = ( s.match(/Completed in (\S+?) \((\S+?) reqs\/sec\)/) or "")[1..-1]
  http_status, url         = ( s.match(/\| (\d+) \w+ \[(.+?)\]$/) or "")[1..-1]

  render_time, render_perc = s =~ /200 OK/ ? ( s.match(/Rendering: (\S+?) \((\d+)/) or "")[1..-1] : [ '0.0--00', '0' ]
  db_time, db_perc         = s =~ /DB: /   ? ( s.match(/DB: (\S+) \((\d+)/) or "")[1..-1]         : [ '0.0--00', '0' ]

  url = ( url or "" )[/\w(\/.*)/, 1] if not FULL_URL

  controller = ""
  action = ""

  controller, action = (url or "").match(/^\/(\w+)\/(\w+)/)

  puts sprintf("%15s,%s,%s,%2s%%,%s,%2s%%,%s,%4s,%s,%s",
    ip, time, render_time, render_perc, db_time, db_perc, final_time, reqs_per_sec, http_status, url, controller, action)
end
