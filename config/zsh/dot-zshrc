# vim: syntax=zsh
# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

source_if_exists() {
    readonly file=$1
    if [ -e $file ] ; then
        source $file
    else
        echo "Missing: $file"
    fi
}

ZGENOM_SOURCE="${HOME}/.zgenom"

if [ ! -d "${ZGENOM_SOURCE}" ] ; then
    echo "Cloning zgenom into ${ZGENOM_SOURCE} ..."
    git clone https://github.com/jandamm/zgenom.git "${ZGENOM_SOURCE}"
fi

source_if_exists "${ZGENOM_SOURCE}/zgenom.zsh"
if command -v zgenom &> /dev/null ; then
    zgenom autoupdate
    if ! zgenom saved ; then
        zgenom ohmyzsh
        zgenom ohmyzsh plugins/brew
        zgenom ohmyzsh plugins/git
        zgenom ohmyzsh plugins/asdf
        zgenom ohmyzsh plugins/fzf
        zgenom ohmyzsh plugins/gh
        zgenom ohmyzsh plugins/httpie
        zgenom ohmyzsh plugins/kube-ps1
        zgenom load git@github.com:zsh-users/zsh-autosuggestions.git
        zgenom load https://github.com/dracula/zsh.git dracula.zsh-theme
        zgenom load git@github.com:Aloxaf/fzf-tab.git
        zgenom save
    fi
else
  echo "zgenom not installed"
fi


# Do not upgrade random things
export HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK=1

# Autocomplete with files if nothing known
zstyle :completion::::: completer _complete _files

NEWLINE=$'\n'

PROMPT='%(?:%F{green}:%F{red})${DRACULA_ARROW_ICON}%F{green}%B$(dracula_time_segment) %F{magenta}%B$(dracula_context)%F{blue}%B%c $DRACULA_GIT_STATUS%f%b $(kube_ps1)${NEWLINE}> '

alias per="pipenv run"
alias perp="pipenv run python"
alias gaucmsg="git add --update && git commit -m"
alias glinted="gau && gcn! && ggp"
alias gdmb!='gco $(git_main_branch) && git-dmb --effort=3 && ggl'
alias grbom='gfo && git rebase origin/$(git_main_branch)'
alias kc=kubectl
alias ldc=logdnactl
alias gh="GITHUB_TOKEN='' gh"
export EDITOR=vim
export RIPGREP_CONFIG_PATH=~/.ripgreprc
export LOGDNA_WORKDIR=~/dev/mezmo
export SDM_EMAIL=jon.moses@mezmo.com
export LESS="-RX"

for f in ~/.zsh.d/*.sh ; do
    source $f
done

PATH=~/.bin/:${HOME}/.krew/bin:$PATH

source_if_exists "$(brew --prefix)/share/google-cloud-sdk/path.zsh.inc"
source_if_exists "$(brew --prefix)/share/google-cloud-sdk/completion.zsh.inc"
#source_if_exists /usr/local/ibmcloud/autocomplete/zsh_autocomplete

if command -v thefuck &> /dev/null ; then
    eval $(thefuck --alias)
else
    echo "Missing command: thefuck"
fi

setopt hist_find_no_dups
bindkey "^[[A" up-line-or-local-history
bindkey "^[[B" down-line-or-local-history

up-line-or-local-history() {
    zle set-local-history 1
    zle up-line-or-history
    zle set-local-history 0
}
zle -N up-line-or-local-history
down-line-or-local-history() {
    zle set-local-history 1
    zle down-line-or-history
    zle set-local-history 0
}
zle -N down-line-or-local-history


function repo() {
    if [ ! -z $1 ]; then
        if [ -d $LOGDNA_WORKDIR/$1 ]; then
            r=$1
        else
            r=$(ls $LOGDNA_WORKDIR | fzf --query "'${1}" --select-1)
        fi
    else
        r=$(ls $LOGDNA_WORKDIR | fzf)
    fi
    if [ -z $r ] ; then
        echo "Nothing selected"
    else
        cd $LOGDNA_WORKDIR/$r
        if [ ! -z $TMUX ]; then
            tmux rename-window $( echo $r | sed s/'\/'//)
        fi
    fi
}

# Completion
## kubectl -> kc completion
#if [ -e $COMPLETION_DIR/kubectl.bash ]; then
#    complete -o default -o nospace -F __start_kubectl kc
#    complete -o default -o nospace -F __start_kubectl gy
#    complete -o default -o nospace -F __start_kubectl yg
#fi
